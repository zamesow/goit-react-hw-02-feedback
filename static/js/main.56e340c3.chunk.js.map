{"version":3,"sources":["components/Statistics/Statistics.js","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","App.js","index.js"],"names":["Statistics","props","good","neutral","bad","total","positivePercentage","className","Section","title","children","FeedbackOptions","options","onFeedback","map","option","type","data-action","onClick","Notification","message","App","state","target","dataset","action","setState","prevState","Object","values","this","reduce","acc","item","countTotalFeedback","Math","round","keys","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAiCeA,MA9Bf,SAAoBC,GAAQ,IAClBC,EAAkDD,EAAlDC,KAAMC,EAA4CF,EAA5CE,QAASC,EAAmCH,EAAnCG,IAAKC,EAA8BJ,EAA9BI,MAAOC,EAAuBL,EAAvBK,mBAEnC,OACE,qBAAKC,UAAU,OAAf,SACE,qBAAIA,UAAU,WAAd,UACE,6BACE,uCAAUL,OAEZ,6BACE,0CAAaC,OAEf,6BACE,sCAASC,OAEX,6BACE,wCAAWC,OAEb,6BACE,oDAAuBC,EAAvB,e,MCJKE,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,sBAAKH,UAAU,UAAf,UACE,oBAAIA,UAAU,WAAd,SAA0BE,IACzBC,MCkBQC,MAvBf,YAAmD,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,WAClC,OACE,qBAAKN,UAAU,WAAf,SACGK,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBACEC,KAAK,SACLC,cAAaF,EACbG,QAASL,EACTN,UAAU,MAJZ,SAOGQ,GAFIA,SCDAI,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,4BAAIA,KCoEEC,E,4MAlEbC,MAAQ,CACNpB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAsBPS,WAAa,YAAiB,IACtBG,EADqB,EAAbO,OACMC,QAAQC,OAE5B,EAAKC,UAAS,SAAAC,GACZ,OAAO,eAAGX,EAAOW,EAAUX,GAAQ,O,mEAhBrC,OALcY,OAAOC,OAAOC,KAAKR,OAAOS,QACtC,SAACC,EAAKC,GAAN,OAAeD,EAAMC,IACrB,K,wDAM+B,IACzB/B,EAAS4B,KAAKR,MAAdpB,KACFG,EAAQyB,KAAKI,qBAGnB,OAFmB7B,EAAQ8B,KAAKC,MAAOlC,EAAOG,EAAS,KAAO,I,+BActD,IAAD,EACwByB,KAAKR,MAA5BpB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBQ,EAAUgB,OAAOS,KAAKP,KAAKR,OAEjC,OACE,qCAEE,cAAC,EAAD,CAASb,MAAM,wBAAf,SACE,cAAC,EAAD,CACEG,QAASA,EACTC,WAAYiB,KAAKjB,eAIrB,cAAC,EAAD,CAASJ,MAAM,aAAf,SAE8C,IAA3CqB,KAAKQ,kCACJ,cAAC,EAAD,CACEpC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOyB,KAAKI,qBACZ5B,mBAAoBwB,KAAKQ,oCAG3B,cAAC,EAAD,CAAclB,QAAQ,+B,GA3DhBmB,aCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.56e340c3.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Statistics(props) {\n  const { good, neutral, bad, total, positivePercentage } = props;\n\n  return (\n    <div className=\"stat\">\n      <ul className=\"statList\">\n        <li>\n          <p>Good: {good}</p>\n        </li>\n        <li>\n          <p>Neutral: {neutral}</p>\n        </li>\n        <li>\n          <p>Bad: {bad}</p>\n        </li>\n        <li>\n          <p>Total: {total}</p>\n        </li>\n        <li>\n          <p>Pozitive feedback: {positivePercentage}%</p>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nStatistics.propTypes = {\n  props: PropTypes.objectOf(PropTypes.number).isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Section.css';\n\nfunction Section({ title, children }) {\n  return (\n    <div className=\"section\">\n      <h2 className=\"feedback\">{title}</h2>\n      {children}\n    </div>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction FeedbackOptions({ options, onFeedback }) {\n  return (\n    <div className=\"btnBlock\">\n      {options.map(option => (\n        <button\n          type=\"button\"\n          data-action={option}\n          onClick={onFeedback}\n          className=\"btn\"\n          key={option}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.string.isRequired,\n  onFeedback: PropTypes.func,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Notification({ message }) {\n  return <p>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport Statistics from './components/Statistics';\nimport Section from './components/Section';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Notification from './components/Notification';\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  //   total\n  countTotalFeedback() {\n    const total = Object.values(this.state).reduce(\n      (acc, item) => acc + item,\n      0,\n    );\n\n    return total;\n  }\n  //   percentage\n  countPositiveFeedbackPercentage() {\n    const { good } = this.state;\n    const total = this.countTotalFeedback();\n    const percentage = total ? Math.round((good / total) * 100) : 0;\n\n    return percentage;\n  }\n\n  //   increment\n  onFeedback = ({ target }) => {\n    const type = target.dataset.action;\n\n    this.setState(prevState => {\n      return { [type]: prevState[type] + 1 };\n    });\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const options = Object.keys(this.state);\n\n    return (\n      <>\n        {/* buttons */}\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={options}\n            onFeedback={this.onFeedback}\n          ></FeedbackOptions>\n        </Section>\n\n        <Section title=\"Statistics\">\n          {/* message \"No feedback given\"*/}\n          {this.countPositiveFeedbackPercentage() !== 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            ></Statistics>\n          ) : (\n            <Notification message=\"No feedback given\"></Notification>\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}